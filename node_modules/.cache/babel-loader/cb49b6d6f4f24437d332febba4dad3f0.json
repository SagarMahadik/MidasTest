{"ast":null,"code":"var _jsxFileName = \"/home/sagar/reactProjects/searchbar/src/components/DisplaySuggestions.js\";\nimport React, { Component, Fragment } from 'react';\nimport \"./styles/index.css\";\nexport default class DisplaySuggestions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedText: ''\n    };\n\n    this.onClick = e => {\n      e.preventDefault();\n      const selectedText = e.currentTarget.innerText;\n      this.setState({\n        selectedText: selectedText\n      }, this.props.setSearchText(selectedText));\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          displaySuggestions = _this$props.displaySuggestions,\n          patientSearchResult = _this$props.patientSearchResult,\n          currentSuggestion = _this$props.currentSuggestion;\n    if (!displaySuggestions) return null;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"suggestions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, patientSearchResult && patientSearchResult.map((item, index) => {\n      if (index === currentSuggestion) {\n        className = \"\";\n      }\n\n      return React.createElement(\"li\", {\n        key: index,\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, item.name));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/sagar/reactProjects/searchbar/src/components/DisplaySuggestions.js"],"names":["React","Component","Fragment","DisplaySuggestions","state","selectedText","onClick","e","preventDefault","currentTarget","innerText","setState","props","setSearchText","render","displaySuggestions","patientSearchResult","currentSuggestion","map","item","index","className","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,oBAAP;AAEA,eAAe,MAAMC,kBAAN,SAAiCF,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAEtDG,KAFsD,GAE/C;AACHC,MAAAA,YAAY,EAAE;AADX,KAF+C;;AAAA,SAOtDC,OAPsD,GAO3CC,CAAD,IAAO;AACbA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMH,YAAY,GAAGE,CAAC,CAACE,aAAF,CAAgBC,SAArC;AACA,WAAKC,QAAL,CAAc;AAACN,QAAAA,YAAY,EAAGA;AAAhB,OAAd,EACI,KAAKO,KAAL,CAAWC,aAAX,CAAyBR,YAAzB,CADJ;AAKH,KAfqD;AAAA;;AAmBtDS,EAAAA,MAAM,GAAG;AAAA,wBAE+D,KAAKF,KAFpE;AAAA,UAECG,kBAFD,eAECA,kBAFD;AAAA,UAEqBC,mBAFrB,eAEqBA,mBAFrB;AAAA,UAE0CC,iBAF1C,eAE0CA,iBAF1C;AAGL,QAAI,CAACF,kBAAL,EAAyB,OAAO,IAAP;AAEzB,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,mBAAmB,IACnBA,mBAAmB,CAACE,GAApB,CAAwB,CAACC,IAAD,EAAMC,KAAN,KAAc;AAClC,UAAGA,KAAK,KAAKH,iBAAb,EAA+B;AAC3BI,QAAAA,SAAS,GAAG,EAAZ;AACH;;AACD,aACI;AAAI,QAAA,GAAG,EAAED,KAAT;AAAgB,QAAA,OAAO,EAAE,KAAKd,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCa,IAAI,CAACG,IADN,CADJ,CADJ;AAQH,KAZD,CAHR,CAFJ,CADJ;AAwBH;;AAhDqD","sourcesContent":["import React, { Component,Fragment } from 'react'\nimport \"./styles/index.css\"\n\nexport default class DisplaySuggestions extends Component {\n\n    state ={\n        selectedText :''\n    }\n\n\n    onClick = (e) => {\n        e.preventDefault();\n        const selectedText = e.currentTarget.innerText ;\n        this.setState({selectedText : selectedText},\n            this.props.setSearchText(selectedText)\n            );                     \n    \n\n    }\n\n\n\n    render() {\n        \n        const{displaySuggestions, patientSearchResult, currentSuggestion} = this.props;\n        if (!displaySuggestions) return null;\n\n        return (\n            <Fragment>\n\n                <ul className=\"suggestions\">\n                    {\n                        patientSearchResult && \n                        patientSearchResult.map((item,index)=>{\n                            if(index === currentSuggestion){\n                                className = \"\";\n                            }\n                            return(\n                                <li key={index} onClick={this.onClick} >\n                                    <a>\n                                    {item.name}\n                                    </a>\n                                    \n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </Fragment>\n                \n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}