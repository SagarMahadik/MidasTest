{"ast":null,"code":"var _jsxFileName = \"/home/sagar/reactProjects/searchbar/src/components/pages/SearchPage.js\";\nimport React, { Component } from 'react';\nimport DisplaySuggestions from '../DisplaySuggestions';\nimport '../styles/index.css';\nimport { Redirect } from 'react-router-dom';\nexport default class SearchPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userInput: \"\",\n      currentSuggestion: 0,\n      patients: [],\n      patientSearchResult: [],\n      redirect: false,\n      displaySuggestions: false\n    };\n\n    this.onChange = e => {\n      const searchTerm = e.target.value; //this.setState({activeSuggestion :0})\n\n      this.setState({\n        userInput: e.target.value\n      });\n      this.searchPatients(searchTerm);\n    };\n\n    this.onKeyDown = e => {\n      const _this$state = this.state,\n            currentSuggestion = _this$state.currentSuggestion,\n            patientSearchResult = _this$state.patientSearchResult;\n\n      if (e.keyCode === 40 && currentSuggestion < patientSearchResult.length - 1) {\n        this.setState(prevState => ({\n          currentSuggestion: prevState.currentSuggestion + 1\n        }));\n      } else if (e.keyCode === 38 && currentSuggestion > 0) {\n        this.setState(prevState => ({\n          currentSuggestion: prevState.currentSuggestion - 1\n        }));\n      } else if (e.keyCode === 13) {\n        this.setState({\n          userInput: patientSearchResult[currentSuggestion - 1]\n        });\n      }\n\n      console.log(currentSuggestion);\n    };\n\n    this.onSubmit = selectedText => {\n      this.setState({\n        userInput: selectedText\n      });\n    };\n\n    this.searchPatients = searchTerm => {\n      const patients = this.state.patients;\n      const pattern = \"[A-Za-z.s]*\".concat(searchTerm, \"[A-Za-z.s]*\");\n      const matchRegex = new RegExp(pattern);\n      const patientSearchResultFiltered = patients.filter(item => matchRegex.test(item.name || item.phone));\n      const patientSearchResult = patientSearchResultFiltered.slice(0, 4);\n      this.setState({\n        patientSearchResult\n      });\n    };\n\n    this.onInput = e => {\n      if (e.target.value !== \"\") this.showSuggestions();else this.hideSuggestions();\n    };\n\n    this.showSuggestions = () => {\n      this.setState({\n        displaySuggestions: true\n      });\n    };\n\n    this.hideSuggestions = () => {\n      this.setState({\n        displaySuggestions: false\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        currentSuggestion: 0,\n        patientSearchResult: [],\n        displaySuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.setSearchText = text => {\n      console.log(text);\n      this.setState({\n        userInput: text //displaySuggestions:false\n\n      });\n    };\n  }\n\n  async fetchData() {\n    const patients = await fetch('/resources/patient.json').catch(err => console.log(err));\n    this.setState({\n      patients: (await patients.json()).patients\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"I am in component\");\n    this.fetchData();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displaySuggestions = _this$state2.displaySuggestions,\n          patientSearchResult = _this$state2.patientSearchResult,\n          currentSuggestion = _this$state2.currentSuggestion;\n    let suggestionListComponent;\n\n    if (displaySuggestions && this.state.userInput) {\n      if (patientSearchResult.length) {\n        suggestionListComponent = React.createElement(\"ul\", {\n          className: \"suggestions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, patientSearchResult.map((item, index) => React.createElement(\"li\", {\n          key: index,\n          onClick: this.onClick,\n          className: currentSuggestion === index ? 'active' : null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, item.name)));\n      }\n    } else {\n      suggestionListComponent = React.createElement(\"div\", {\n        className: \"no-suggestions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"No suggestions\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"searchbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"doctor-searchBox-input\",\n      type: \"search\",\n      placeholder: \"search for patient\",\n      name: \"text\",\n      value: this.state.userInput,\n      onInput: this.onInput,\n      onKeyDown: this.onKeyDown,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), suggestionListComponent);\n  }\n\n}","map":{"version":3,"sources":["/home/sagar/reactProjects/searchbar/src/components/pages/SearchPage.js"],"names":["React","Component","DisplaySuggestions","Redirect","SearchPage","state","userInput","currentSuggestion","patients","patientSearchResult","redirect","displaySuggestions","onChange","e","searchTerm","target","value","setState","searchPatients","onKeyDown","keyCode","length","prevState","console","log","onSubmit","selectedText","pattern","matchRegex","RegExp","patientSearchResultFiltered","filter","item","test","name","phone","slice","onInput","showSuggestions","hideSuggestions","onClick","currentTarget","innerText","setSearchText","text","fetchData","fetch","catch","err","json","componentDidMount","render","suggestionListComponent","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DisplaySuggestions from '../DisplaySuggestions';\nimport '../styles/index.css';\n\n\nimport {Redirect} from 'react-router-dom';\n\n\nexport default class SearchPage extends Component {\n\n    state ={\n        userInput:\"\",\n        currentSuggestion:0,\n        patients:[],\n        patientSearchResult:[],\n        redirect:false,\n        displaySuggestions:false\n    }\n   \n\n    async fetchData (){\n        const patients = await fetch('/resources/patient.json').catch(\n            err =>console.log(err)\n        )\n        this.setState({patients:(await patients.json()).patients});\n    }\n\n    componentDidMount(){\n        console.log(\"I am in component\")\n        this.fetchData();\n    }\n\n    onChange = (e) => {\n        const searchTerm = e.target.value;\n        //this.setState({activeSuggestion :0})\n        this.setState({userInput: e.target.value })\n        this.searchPatients(searchTerm);\n    }\n\n    onKeyDown = (e) => {\n\n        const {currentSuggestion, patientSearchResult} = this.state;\n        \n        if(e.keyCode === 40 && currentSuggestion< patientSearchResult.length -1){\n            this.setState(prevState =>({\n                currentSuggestion : prevState.currentSuggestion +1\n            }))\n    }else if(e.keyCode === 38 && currentSuggestion >0){\n        this.setState(prevState => ({\n            currentSuggestion:prevState.currentSuggestion -1\n        }))\n    }else if(e.keyCode=== 13){\n        this.setState({\n            userInput: patientSearchResult[currentSuggestion-1]\n        })\n    }\n    console.log(currentSuggestion)\n}\n\n    onSubmit = (selectedText) =>{\n       this.setState({\n           userInput: selectedText\n       }) \n    }\n\n    searchPatients = (searchTerm) => {\n\n        const {patients} = this.state;\n\n        const pattern = `[A-Za-z.\\s]*${searchTerm}[A-Za-z.\\s]*`;\n\n        const matchRegex = new RegExp(pattern);\n\n        const patientSearchResultFiltered = patients.filter(item => \n            matchRegex.test(item.name||item.phone)\n        );\n\n        const patientSearchResult = patientSearchResultFiltered.slice(0,4)\n\n        this.setState({patientSearchResult})\n    }\n\n  \n    /*onSubmit = (e) => {\n        \n        e.preventDefault();\n        this.setState({\n            redirect : true\n        })\n        }*/       \n\n    onInput = (e) => {\n        if(e.target.value !== \"\") this.showSuggestions();\n        else this.hideSuggestions();\n    }\n\n    showSuggestions = () => {\n        this.setState({\n            displaySuggestions: true\n        })\n    }\n\n    hideSuggestions = () => {\n        this.setState({\n            displaySuggestions :false\n        })\n    }\n\n    onClick = (e) => {\n        this.setState({\n            currentSuggestion :0,\n            patientSearchResult:[],\n            displaySuggestions:false,\n            userInput: e.currentTarget.innerText\n        })\n    }\n\n    setSearchText =  (text) => {\n        console.log(text)\n        this.setState({\n            userInput :  text,\n            //displaySuggestions:false\n        })\n    }\n\n    render() {\n        const {displaySuggestions , patientSearchResult, currentSuggestion} = this.state;     \n\n        let suggestionListComponent;\n        if(displaySuggestions && this.state.userInput){\n            if(patientSearchResult.length){\n                suggestionListComponent = (\n                    <ul className =\"suggestions\">\n                        {\n                            patientSearchResult.map((item, index)=> (\n                                \n                                    <li key ={index}\n                                     onClick={this.onClick}\n                                     className = {currentSuggestion ===index ? 'active': null}\n                                     >\n                                        {item.name}\n                                    </li>\n                                \n                            ))\n                        }\n                    </ul>\n                )\n            }\n        }else{\n            suggestionListComponent = (\n                <div className ='no-suggestions'>\n                    <em>No suggestions</em>\n                </div>\n            )\n        }\n\n        return (\n            <div className = \"searchbox\">\n                \n                    <input className =\"doctor-searchBox-input\"\n                     type =\"search\"\n                     placeholder=\"search for patient\"\n                     name =\"text\"\n                     value ={this.state.userInput}\n                     onInput ={this.onInput}\n                     onKeyDown ={this.onKeyDown}\n                     onChange ={this.onChange} /> \n                     {suggestionListComponent}\n                          \n                </div>\n\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}