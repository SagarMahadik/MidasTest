{"ast":null,"code":"var _jsxFileName = \"/home/sagar/reactProjects/searchbar/src/components/pages/SearchPage.js\";\nimport React, { Component } from 'react';\nimport DisplaySuggestions from '../DisplaySuggestions';\nimport '../styles/index.css';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nexport default class SearchPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userInput: \"\",\n      currentSuggestion: 0,\n      patients: [],\n      patientSearchResult: [],\n      redirect: false,\n      displaySuggestions: false\n    };\n\n    this.onChange = e => {\n      const searchTerm = e.target.value; //this.setState({activeSuggestion :0})\n\n      this.setState({\n        userInput: e.target.value\n      });\n      this.searchPatients(searchTerm);\n    };\n\n    this.onKeyDown = e => {\n      const _this$state = this.state,\n            currentSuggestion = _this$state.currentSuggestion,\n            patientSearchResult = _this$state.patientSearchResult;\n\n      if (e.keyCode === 40 && currentSuggestion < patientSearchResult.length - 1) {\n        this.setState(prevState => ({\n          currentSuggestion: prevState.currentSuggestion + 1,\n          userInput: e.currentTarget.innerText\n        }));\n      } else if (e.keyCode === 38 && currentSuggestion > 0) {\n        this.setState(prevState => ({\n          currentSuggestion: prevState.currentSuggestion - 1,\n          userInput: e.currentTarget.innerText\n        }));\n      } else if (e.keyCode === 13) {\n        this.setState({\n          currentSuggestion: 0,\n          displaySuggestions: false,\n          userInput: patientSearchResult[currentSuggestion - 1].name,\n          redirect: true\n        });\n      }\n\n      console.log(patientSearchResult); //console.log(patientSearchResult[0])\n      //console.log(currentSuggestion)\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.searchPatients = searchTerm => {\n      const patients = this.state.patients;\n      const pattern = \"[A-Za-z.s]*\".concat(searchTerm, \"[A-Za-z.s]*\");\n      const matchRegex = new RegExp(pattern);\n      const patientSearchResultFiltered = patients.filter(item => matchRegex.test(item.name || item.phone));\n      const patientSearchResult = patientSearchResultFiltered.slice(0, 4);\n      this.setState({\n        patientSearchResult: patientSearchResult\n      });\n    };\n\n    this.onInput = e => {\n      if (e.target.value !== \"\") this.showSuggestions();else this.hideSuggestions();\n    };\n\n    this.showSuggestions = () => {\n      this.setState({\n        displaySuggestions: true\n      });\n    };\n\n    this.hideSuggestions = () => {\n      this.setState({\n        displaySuggestions: false\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        currentSuggestion: 0,\n        patientSearchResult: [],\n        displaySuggestions: false,\n        userInput: e.currentTarget.innerText,\n        redirect: true\n      });\n    };\n\n    this.setSearchText = text => {\n      console.log(text);\n      this.setState({\n        userInput: text //displaySuggestions:false\n\n      });\n    };\n  }\n\n  async fetchData() {\n    const patients = await fetch('/resources/patient.json').catch(err => console.log(err));\n    this.setState({\n      patients: (await patients.json()).patients\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"I am in component\");\n    this.fetchData();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          redirect = _this$state2.redirect,\n          displaySuggestions = _this$state2.displaySuggestions,\n          patientSearchResult = _this$state2.patientSearchResult,\n          currentSuggestion = _this$state2.currentSuggestion;\n\n    if (redirect) {\n      return React.createElement(Redirect, {\n        to: \"/dashboard/\".concat(this.state.userInput),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n\n    let suggestionListComponent;\n\n    if (displaySuggestions && this.state.userInput) {\n      if (patientSearchResult.length) {\n        suggestionListComponent = React.createElement(\"ul\", {\n          className: \"suggestions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, patientSearchResult.map((item, index) => React.createElement(Link, {\n          key: index,\n          to: \"/doctorDashboard/\".concat(item.email),\n          onClick: this.onClick,\n          className: currentSuggestion === index ? 'active' : null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, item.name)));\n      }\n    } else {\n      suggestionListComponent = React.createElement(\"div\", {\n        className: \"no-suggestions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"No suggestions\"));\n    }\n\n    return React.createElement(\"form\", {\n      className: \"searchbox\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"doctor-searchBox-input\",\n      type: \"search\",\n      placeholder: \"search for patient\",\n      name: \"text\",\n      value: this.state.userInput,\n      onInput: this.onInput,\n      onKeyDown: this.onKeyDown,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), suggestionListComponent, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      className: \"search-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/sagar/reactProjects/searchbar/src/components/pages/SearchPage.js"],"names":["React","Component","DisplaySuggestions","Link","Redirect","SearchPage","state","userInput","currentSuggestion","patients","patientSearchResult","redirect","displaySuggestions","onChange","e","searchTerm","target","value","setState","searchPatients","onKeyDown","keyCode","length","prevState","currentTarget","innerText","name","console","log","onSubmit","preventDefault","pattern","matchRegex","RegExp","patientSearchResultFiltered","filter","item","test","phone","slice","onInput","showSuggestions","hideSuggestions","onClick","setSearchText","text","fetchData","fetch","catch","err","json","componentDidMount","render","suggestionListComponent","map","index","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DisplaySuggestions from '../DisplaySuggestions';\nimport '../styles/index.css';\nimport {Link} from 'react-router-dom';\n\n\nimport {Redirect} from 'react-router-dom';\n\n\nexport default class SearchPage extends Component {\n\n    state ={\n        userInput:\"\",\n        currentSuggestion:0,\n        patients:[],\n        patientSearchResult:[],\n        redirect:false,\n        displaySuggestions:false\n    }\n   \n\n    async fetchData (){\n        const patients = await fetch('/resources/patient.json').catch(\n            err =>console.log(err)\n        )\n        this.setState({patients:(await patients.json()).patients});\n    }\n\n    componentDidMount(){\n        console.log(\"I am in component\")\n        this.fetchData();\n    }\n\n    onChange = (e) => {\n        const searchTerm = e.target.value;\n        //this.setState({activeSuggestion :0})\n        this.setState({userInput: e.target.value })\n        this.searchPatients(searchTerm);\n    }\n\n    onKeyDown = (e) => {\n\n        const {currentSuggestion, patientSearchResult} = this.state;\n        \n        if(e.keyCode === 40 && currentSuggestion< patientSearchResult.length -1){\n            this.setState(prevState =>({\n                currentSuggestion : prevState.currentSuggestion +1,\n                userInput:e.currentTarget.innerText\n            }))\n    }else if(e.keyCode === 38 && currentSuggestion >0){\n        this.setState(prevState => ({\n            currentSuggestion:prevState.currentSuggestion -1,\n            userInput: e.currentTarget.innerText\n        }))\n    }else if(e.keyCode=== 13){\n        this.setState({\n            currentSuggestion:0,\n            displaySuggestions:false,\n            userInput: patientSearchResult[currentSuggestion-1].name,\n            redirect:true\n        })\n    }\n\n    console.log(patientSearchResult)    //console.log(patientSearchResult[0])\n    //console.log(currentSuggestion)\n}\n\n    onSubmit = (e) =>{\n        e.preventDefault();\n       this.setState({\n           redirect:true,\n        })\n        \n    }\n\n    searchPatients = (searchTerm) => {\n\n        const {patients} = this.state;\n\n        const pattern = `[A-Za-z.\\s]*${searchTerm}[A-Za-z.\\s]*`;\n\n        const matchRegex = new RegExp(pattern);\n\n        const patientSearchResultFiltered = patients.filter(item => \n            matchRegex.test(item.name||item.phone)\n        );\n\n        const patientSearchResult = patientSearchResultFiltered.slice(0,4)\n\n        this.setState({patientSearchResult : patientSearchResult})\n    }\n\n  \n    /*onSubmit = (e) => {\n        \n        e.preventDefault();\n        this.setState({\n            redirect : true\n        })\n        }*/       \n\n    onInput = (e) => {\n        if(e.target.value !== \"\") this.showSuggestions();\n        else this.hideSuggestions();\n    }\n\n    showSuggestions = () => {\n        this.setState({\n            displaySuggestions: true\n        })\n    }\n\n    hideSuggestions = () => {\n        this.setState({\n            displaySuggestions :false\n        })\n    }\n\n    onClick = (e) => {\n        this.setState({\n            currentSuggestion :0,\n            patientSearchResult:[],\n            displaySuggestions:false,\n            userInput: e.currentTarget.innerText,\n            redirect:true\n        })\n\n        \n    }\n\n    setSearchText =  (text) => {\n        console.log(text)\n        this.setState({\n            userInput :  text,\n            //displaySuggestions:false\n        })\n    }\n\n    render() {\n        const {redirect, displaySuggestions , patientSearchResult, currentSuggestion} = this.state;     \n\n\n        if(redirect){\n            return <Redirect to ={`/dashboard/${this.state.userInput}`} />\n        }           \n        \n        let suggestionListComponent;\n        if(displaySuggestions && this.state.userInput){\n            if(patientSearchResult.length){\n                suggestionListComponent = (\n                    <ul className =\"suggestions\">\n                        {\n                            patientSearchResult.map((item, index)=> (\n                                                                \n                                    <Link key ={index}\n                                    to={`/doctorDashboard/${item.email}`}\n                                     onClick={this.onClick}\n                                     className = {currentSuggestion ===index ? 'active': null}\n                                     >\n                                        {item.name}\n                                    </Link>\n                                \n                            ))\n                        }\n                    </ul>\n                )\n            }\n        }else{\n            suggestionListComponent = (\n                <div className ='no-suggestions'>\n                    <em>No suggestions</em>\n                </div>\n            )\n        }\n\n        return (\n            <form className = \"searchbox\" onSubmit={this.onSubmit}>\n                \n                    <input className =\"doctor-searchBox-input\"\n                     type =\"search\"\n                     placeholder=\"search for patient\"\n                     name =\"text\"\n                     value ={this.state.userInput}\n                     onInput ={this.onInput}\n                     onKeyDown ={this.onKeyDown}\n                     onChange ={this.onChange} /> \n                     {suggestionListComponent}\n                  <input type = \"submit\"\n                  value=\"Login\"\n                  className =\"search-btn\" />\n                          \n                </form>\n\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}