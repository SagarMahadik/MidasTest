{"ast":null,"code":"var _jsxFileName = \"/home/sagar/reactProjects/searchbar/src/components/pages/SearchPage.js\";\nimport React, { Component } from 'react';\nimport DisplaySuggestions from '../DisplaySuggestions';\nimport '../styles/index.css';\nimport { Redirect } from 'react-router-dom';\nexport default class SearchPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userInput: \"\",\n      currentSuggestion: 0,\n      patients: [],\n      patientSearchResult: [],\n      redirect: false,\n      displaySuggestions: false\n    };\n\n    this.onChange = e => {\n      const searchTerm = e.target.value; //this.setState({activeSuggestion :0})\n\n      this.setState({\n        userInput: e.target.value\n      });\n      this.searchPatients(searchTerm);\n    };\n\n    this.onKeyDown = e => {\n      const currentSuggestion = this.state.currentSuggestion;\n\n      if (e.keyCode === 40) {\n        this.setState({\n          currentSuggestion: currentSuggestion + 1\n        });\n        console.log(currentSuggestion);\n      } else if (e.keyCode === 38) {\n        this.setState({\n          currentSuggestion: currentSuggestion - 1\n        });\n        console.log(currentSuggestion);\n      }\n    };\n\n    this.onSubmit = selectedText => {\n      this.setState({\n        userInput: selectedText\n      });\n    };\n\n    this.searchPatients = searchTerm => {\n      const patients = this.state.patients;\n      const pattern = \"[A-Za-z.s]*\".concat(searchTerm, \"[A-Za-z.s]*\");\n      const matchRegex = new RegExp(pattern);\n      const patientSearchResultFiltered = patients.filter(item => matchRegex.test(item.name || item.phone));\n      const patientSearchResult = patientSearchResultFiltered.slice(0, 4);\n      this.setState({\n        patientSearchResult\n      });\n    };\n\n    this.onInput = e => {\n      if (e.target.value !== \"\") this.showSuggestions();else this.hideSuggestions();\n    };\n\n    this.showSuggestions = () => {\n      this.setState({\n        displaySuggestions: true\n      });\n    };\n\n    this.hideSuggestions = () => {\n      this.setState({\n        displaySuggestions: false\n      });\n    };\n\n    this.setSearchText = text => {\n      console.log(text);\n      this.setState({\n        userInput: text //displaySuggestions:false\n\n      });\n    };\n  }\n\n  async fetchData() {\n    const patients = await fetch('/resources/patient.json').catch(err => console.log(err));\n    this.setState({\n      patients: (await patients.json()).patients\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"I am in component\");\n    this.fetchData();\n  }\n\n  render() {\n    const _this$state = this.state,\n          displaySuggestions = _this$state.displaySuggestions,\n          patientSearchResult = _this$state.patientSearchResult,\n          currentSuggestion = _this$state.currentSuggestion;\n    /*if(this.state.redirect === true){\n        return <Redirect to='/doctorDashboard' />\n    }*/\n\n    return React.createElement(\"div\", {\n      className: \"searchbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"doctor-searchBox-input\",\n      type: \"search\",\n      placeholder: \"search for patient\",\n      name: \"text\",\n      value: this.state.userInput,\n      onInput: this.onInput,\n      onKeyDown: this.onKeyDown,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(DisplaySuggestions, {\n      displaySuggestions: displaySuggestions,\n      patientSearchResult: patientSearchResult,\n      currentSuggestion: currentSuggestion,\n      setSearchText: this.setSearchText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/sagar/reactProjects/searchbar/src/components/pages/SearchPage.js"],"names":["React","Component","DisplaySuggestions","Redirect","SearchPage","state","userInput","currentSuggestion","patients","patientSearchResult","redirect","displaySuggestions","onChange","e","searchTerm","target","value","setState","searchPatients","onKeyDown","keyCode","console","log","onSubmit","selectedText","pattern","matchRegex","RegExp","patientSearchResultFiltered","filter","item","test","name","phone","slice","onInput","showSuggestions","hideSuggestions","setSearchText","text","fetchData","fetch","catch","err","json","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DisplaySuggestions from '../DisplaySuggestions';\nimport '../styles/index.css';\n\n\nimport {Redirect} from 'react-router-dom';\n\n\nexport default class SearchPage extends Component {\n\n    state ={\n        userInput:\"\",\n        currentSuggestion:0,\n        patients:[],\n        patientSearchResult:[],\n        redirect:false,\n        displaySuggestions:false\n    }\n   \n\n    async fetchData (){\n        const patients = await fetch('/resources/patient.json').catch(\n            err =>console.log(err)\n        )\n        this.setState({patients:(await patients.json()).patients});\n    }\n\n    componentDidMount(){\n        console.log(\"I am in component\")\n        this.fetchData();\n    }\n\n    onChange = (e) => {\n        const searchTerm = e.target.value;\n        //this.setState({activeSuggestion :0})\n        this.setState({userInput: e.target.value })\n        this.searchPatients(searchTerm);\n    }\n\n    onKeyDown = (e) => {\n\n        const {currentSuggestion} = this.state;\n        \n        if(e.keyCode === 40){\n            this.setState({\n                currentSuggestion : currentSuggestion +1\n            })\n            console.log(currentSuggestion)\n        }else if(e.keyCode === 38){\n            this.setState({\n                currentSuggestion : currentSuggestion -1\n            })\n            console.log(currentSuggestion)\n        }\n    }\n\n    onSubmit = (selectedText) =>{\n       this.setState({\n           userInput: selectedText\n       }) \n    }\n\n    searchPatients = (searchTerm) => {\n\n        const {patients} = this.state;\n\n        const pattern = `[A-Za-z.\\s]*${searchTerm}[A-Za-z.\\s]*`;\n\n        const matchRegex = new RegExp(pattern);\n\n        const patientSearchResultFiltered = patients.filter(item => \n            matchRegex.test(item.name||item.phone)\n        );\n\n        const patientSearchResult = patientSearchResultFiltered.slice(0,4)\n\n        this.setState({patientSearchResult})\n    }\n\n  \n    /*onSubmit = (e) => {\n        \n        e.preventDefault();\n        this.setState({\n            redirect : true\n        })\n        }*/       \n\n    onInput = (e) => {\n        if(e.target.value !== \"\") this.showSuggestions();\n        else this.hideSuggestions();\n    }\n\n    showSuggestions = () => {\n        this.setState({\n            displaySuggestions: true\n        })\n    }\n\n    hideSuggestions = () => {\n        this.setState({\n            displaySuggestions :false\n        })\n    }\n\n    setSearchText =  (text) => {\n        console.log(text)\n        this.setState({\n            userInput :  text,\n            //displaySuggestions:false\n        })\n    }\n\n\n\n\n\n    render() {\n        const {displaySuggestions , patientSearchResult, currentSuggestion} = this.state;     \n\n        /*if(this.state.redirect === true){\n            return <Redirect to='/doctorDashboard' />\n        }*/\n        return (\n            <div className = \"searchbox\">\n                \n                    <input className =\"doctor-searchBox-input\"\n                     type =\"search\"\n                     placeholder=\"search for patient\"\n                     name =\"text\"\n                     value ={this.state.userInput}\n                     onInput ={this.onInput}\n                     onKeyDown ={this.onKeyDown}\n                     onChange ={this.onChange} />       \n            <DisplaySuggestions \n                    displaySuggestions={displaySuggestions}\n                    patientSearchResult={patientSearchResult}\n                    currentSuggestion = {currentSuggestion}\n                    setSearchText ={this.setSearchText}\n                    \n            /> \n                </div>\n\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}