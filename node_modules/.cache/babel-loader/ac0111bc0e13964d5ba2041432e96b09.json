{"ast":null,"code":"var _jsxFileName = \"/home/sagar/reactProjects/searchbar/src/components/pages/SearchPage.js\";\nimport React, { Component } from 'react';\nimport DisplaySuggestions from '../DisplaySuggestions';\nimport '../styles/index.css';\nimport { Redirect } from 'react-router-dom';\nexport default class SearchPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userInput: \"\",\n      patients: [],\n      patientSearchResult: [],\n      redirect: false,\n      displaySuggestions: false\n    };\n\n    this.onChange = e => {\n      const searchTerm = e.target.value;\n      this.setState({\n        userInput: e.target.value\n      });\n      this.searchPatients(searchTerm);\n    };\n\n    this.onSubmit = selectedText => {\n      this.setState({\n        userInput: selectedText\n      });\n    };\n\n    this.searchPatients = searchTerm => {\n      const patients = this.state.patients;\n      const pattern = \"[A-Za-z.s]*\".concat(searchTerm, \"[A-Za-z.s]*\");\n      const matchRegex = new RegExp(pattern);\n      const patientSearchResultFiltered = patients.filter(item => matchRegex.test(item.name || item.phone));\n      const patientSearchResult = patientSearchResultFiltered.slice(0, 4);\n      this.setState({\n        patientSearchResult\n      });\n    };\n\n    this.onInput = e => {\n      if (e.target.value !== \"\") this.showSuggestions();else this.hideSuggestions();\n    };\n\n    this.showSuggestions = () => {\n      this.setState({\n        displaySuggestions: true\n      });\n    };\n\n    this.hideSuggestions = () => {\n      this.setState({\n        displaySuggestions: false\n      });\n    };\n\n    this.setSearchText = text => {\n      console.log(text);\n      this.setState({\n        userInput: text\n      });\n    };\n  }\n\n  async fetchData() {\n    const patients = await fetch('/resources/patient.json').catch(err => console.log(err));\n    this.setState({\n      patients: (await patients.json()).patients\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"I am in component\");\n    this.fetchData();\n  }\n\n  render() {\n    const _this$state = this.state,\n          displaySuggestions = _this$state.displaySuggestions,\n          patientSearchResult = _this$state.patientSearchResult;\n    /*if(this.state.redirect === true){\n        return <Redirect to='/doctorDashboard' />\n    }*/\n\n    return React.createElement(\"form\", {\n      className: \"searchbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"doctor-searchBox-input\",\n      type: \"search\",\n      placeholder: \"search for patient\",\n      name: \"text\",\n      value: this.state.text,\n      onInput: this.onInput,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(DisplaySuggestions, {\n      displaySuggestions: displaySuggestions,\n      patientSearchResult: patientSearchResult,\n      setSearchText: this.setSearchText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/sagar/reactProjects/searchbar/src/components/pages/SearchPage.js"],"names":["React","Component","DisplaySuggestions","Redirect","SearchPage","state","userInput","patients","patientSearchResult","redirect","displaySuggestions","onChange","e","searchTerm","target","value","setState","searchPatients","onSubmit","selectedText","pattern","matchRegex","RegExp","patientSearchResultFiltered","filter","item","test","name","phone","slice","onInput","showSuggestions","hideSuggestions","setSearchText","text","console","log","fetchData","fetch","catch","err","json","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DisplaySuggestions from '../DisplaySuggestions';\nimport '../styles/index.css';\n\n\nimport {Redirect} from 'react-router-dom';\n\n\nexport default class SearchPage extends Component {\n\n    state ={\n        userInput:\"\",\n        patients:[],\n        patientSearchResult:[],\n        redirect:false,\n        displaySuggestions:false\n    }\n\n    async fetchData (){\n        const patients = await fetch('/resources/patient.json').catch(\n            err =>console.log(err)\n        )\n        this.setState({patients:(await patients.json()).patients});\n    }\n\n    componentDidMount(){\n        console.log(\"I am in component\")\n        this.fetchData();\n    }\n\n    onChange = (e) => {\n\n        const searchTerm = e.target.value;\n        this.setState({userInput: e.target.value })\n        this.searchPatients(searchTerm);\n    }\n\n    onSubmit = (selectedText) =>{\n       this.setState({\n           userInput: selectedText\n       }) \n    }\n\n    searchPatients = (searchTerm) => {\n\n        const {patients} = this.state;\n\n        const pattern = `[A-Za-z.\\s]*${searchTerm}[A-Za-z.\\s]*`;\n\n        const matchRegex = new RegExp(pattern);\n\n        const patientSearchResultFiltered = patients.filter(item => \n            matchRegex.test(item.name||item.phone)\n        );\n        \n        const patientSearchResult = patientSearchResultFiltered.slice(0,4)\n\n        this.setState({patientSearchResult})\n    }\n\n  \n    /*onSubmit = (e) => {\n        \n        e.preventDefault();\n        this.setState({\n            redirect : true\n        })\n        }*/       \n\n    onInput = (e) => {\n        if(e.target.value !== \"\") this.showSuggestions();\n        else this.hideSuggestions();\n    }\n\n    showSuggestions = () => {\n        this.setState({\n            displaySuggestions: true\n        })\n    }\n\n    hideSuggestions = () => {\n        this.setState({\n            displaySuggestions :false\n        })\n    }\n\n    setSearchText = (text) => {\n        console.log(text)\n        this.setState({\n            userInput : text\n        })\n    }\n\n\n\n    render() {\n        const {displaySuggestions , patientSearchResult} = this.state;     \n\n        /*if(this.state.redirect === true){\n            return <Redirect to='/doctorDashboard' />\n        }*/\n        return (\n            <form className = \"searchbox\">\n                \n                    <input className =\"doctor-searchBox-input\"\n                     type =\"search\"\n                     placeholder=\"search for patient\"\n                     name =\"text\"\n                     value ={this.state.text}\n                     onInput ={this.onInput}\n                     onChange ={this.onChange} />       \n            <DisplaySuggestions \n                    displaySuggestions={displaySuggestions}\n                    patientSearchResult={patientSearchResult}\n                    setSearchText ={this.setSearchText}\n                    \n            /> \n                </form>\n\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}